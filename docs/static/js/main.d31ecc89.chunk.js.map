{"version":3,"sources":["components/AppHeader/index.jsx","components/AppFooter/index.jsx","components/NRACalculator/PropertyTypes.js","components/NRACalculator/calculations.js","components/Map/Search.js","components/Map/index.js","components/ZonePicker/index.js","components/NRACalculator/index.jsx","components/Tabs/Tab.jsx","components/Tabs/Tabs.jsx","components/Resources/index.js","App.jsx","serviceWorker.js","index.js"],"names":["AppHeader","render","className","props","children","React","Component","AppFooter","PropertyTypes","singleFamilyDetached","duplexSingleFamilyAttached","townhomeSingleFamilyAttached","singleDuplex","multiFamily","historic","calculateTaxes","amount","millRate","getNRAEstimates","startingValue","valueAfterInvestment","investmentType","propertyType","zone","eligibility","propertyEligible","investmentEligible","errors","errorID","zonePropertyTypes","zoneData","get","propertyTypes","assessedValue","push","message","isEligible","hasOwnProperty","id","category","rawMinInvestment","minInvestment","totalInvestment","getEligibility","millRateHigh","millRateLow","millRateAvg","incentiveYears","estHigh","calculateRebate","estLow","estAverage","undefined","currentTaxes","taxedInvestment","newTaxes","incrementalTaxSavings","payPerYear","savePerYear","savings","Map","new","rehab","rebate","Search","map","this","leaflet","searchControl","ELG","zoomToResult","addTo","results","L","LayerGroup","on","data","clearLayers","i","length","addLayer","marker","latlng","withLeaflet","getAreaFromClick","e","setZoneFromMap","layer","feature","properties","Name","setState","selection","handleHighlight","style","width","center","state","position","zoom","doubleClickZoom","TileLayer","url","attribution","GeoJSON","key","polygons","onClick","color","highlight","fetch","response","json","console","log","zonePickerStyle","textAlign","marginBottom","ZonePicker","handleOpen","modalOpen","handleClose","Modal","trigger","Button","fluid","size","successColor","Icon","name","open","onClose","Header","Content","image","Actions","primary","HomeOptions","text","value","ImprovOptions","cleanNumber","num","cleanNum","toString","replace","parseInt","Math","floor","formatNumber","toFixed","NRACalculator","handleCurrent","current","handleValueAfterInvestment","handleInvestmentType","handlePropertyType","handleZone","Grid","GridColumn","Form","Segment","stacked","Group","widths","Input","label","labelPosition","placeholder","onChange","Label","error","valueAfterInvestmentError","Select","investmentTypeError","options","propertyTypeError","disabled","handleSubmit","estimates","basic","Message","bind","Tab","activeTab","Tabs","onClickTabItem","tab","child","Resources","href","target","rel","linkStyle","fontWeight","display","App","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d31ecc89.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.scss';\nimport PropTypes from 'prop-types';\n\nclass AppHeader extends React.Component {\n  render = () => {\n    return (\n      <header className=\"AppHeader\">\n        <h1>{this.props.children}</h1>\n      </header>\n    );\n  }\n}\n\nAppHeader.propTypes = {\n  children: PropTypes.any\n}\n\nexport default AppHeader;\n","import React from 'react';\nimport './AppFooter.scss';\nimport PropTypes from 'prop-types';\n\nclass AppFooter extends React.Component {\n  render = () => {\n    return (\n      <footer className=\"AppFooter\">\n        <p>{this.props.children}</p>\n      </footer>\n    );\n  }\n}\n\nAppFooter.propTypes = {\n  children: PropTypes.any\n}\n\nexport default AppFooter;\n","const PropertyTypes = {\n  singleFamilyDetached: 'singleDetached',\n  duplexSingleFamilyAttached: 'singleAttachedDuplex',\n  townhomeSingleFamilyAttached: 'singleAttachedTownhome',\n  singleDuplex: 'singleDuplex',\n  multiFamily: 'multi',\n  historic: 'historic'\n}\n\nexport default PropertyTypes","import PropertyTypes from './PropertyTypes';\n\n// State-wide constant value\nconst assessmentPercentage = 0.115;\n\nexport const calculateTaxes = (amount, millRate) => {\n    return ((amount / 1000) * millRate) - 44;\n}\n\nexport const getEligibility = (startingValue, valueAfterInvestment, investmentType, propertyType, zone) => {\n\n    let propertyEligible = true;\n    let investmentEligible = true;\n    const errors = [];\n    let errorID = 0;\n\n    const zonePropertyTypes = zoneData.get(zone).propertyTypes;\n    const assessedValue = startingValue * assessmentPercentage;\n\n    if (!zonePropertyTypes) {\n        propertyEligible = false;\n        investmentEligible = false;\n        errors.push({\n            message: `${zone} is excluded from the NRA program at this time.`\n        });\n        return {\n            isEligible: propertyEligible && investmentEligible,\n            propertyEligible,\n            investmentEligible,\n            errors\n        }\n    }\n\n    // eslint-disable-next-line no-prototype-builtins\n    if (!zonePropertyTypes || !zonePropertyTypes.hasOwnProperty(propertyType)) {\n        propertyEligible = false;\n        errors.push({\n            id: errorID += 1,\n            category: 'propertyType',\n            message: `This property type doesn't fall under the guidelines for ${zone}.`\n        });\n    } else if (!zonePropertyTypes[propertyType][investmentType]) {\n        propertyEligible = false;\n        errors.push({\n            id: errorID += 1,\n            category: 'investmentType',\n            message: `The provided investment type doesn't fit the guidelines for this property type in ${zone}.`\n        });\n    }\n\n    if (zonePropertyTypes && zonePropertyTypes[propertyType] && propertyEligible) {\n        const rawMinInvestment = zonePropertyTypes[propertyType]['minInvestment'];\n        const minInvestment = rawMinInvestment <= 1 ? rawMinInvestment * assessedValue : rawMinInvestment;\n        const totalInvestment = valueAfterInvestment - startingValue;\n        investmentEligible = totalInvestment >= minInvestment;\n        if (!investmentEligible) errors.push({\n            id: errorID += 1,\n            category: 'minimumInvestment',\n            message: `Investment of $${totalInvestment} doesn't meet the minimum of $${minInvestment} for this property's type, value, and zone.`\n        });\n    } else {\n        investmentEligible = false;\n    }\n\n    return {\n        isEligible: propertyEligible && investmentEligible,\n        propertyEligible,\n        investmentEligible,\n        errors\n    }\n}\n\nexport const getNRAEstimates = (startingValue, valueAfterInvestment, investmentType, propertyType, zone) => {\n\n    const eligibility = getEligibility(startingValue, valueAfterInvestment, investmentType, propertyType, zone);\n    const { isEligible } = eligibility;\n\n    const { millRateHigh, millRateLow, millRateAvg, incentiveYears } = zoneData.get(zone);\n\n    // Calculate based on high, low, and average mill rate within given zone\n    // Eventually we hope to create a more granular estimate based on address,\n    // but as a first pass, this removes a lot of complexity\n    const estHigh = calculateRebate(startingValue, valueAfterInvestment, millRateHigh, incentiveYears, propertyType);\n    const estLow = calculateRebate(startingValue, valueAfterInvestment, millRateLow, incentiveYears, propertyType);\n    const estAverage = calculateRebate(startingValue, valueAfterInvestment, millRateAvg, incentiveYears, propertyType);\n\n    return {\n        estHigh: isEligible ? estHigh : undefined,\n        estLow: isEligible ? estLow : undefined,\n        estAverage: isEligible ? estAverage : undefined,\n        eligibility\n    };\n\n}\n\n// Calculate NRA tax incentive\nexport const calculateRebate = (startingValue, valueAfterInvestment, millRate, incentiveYears, propertyType) => {\n\n    // Calculate current taxes\n    const currentAssessedValue = startingValue * assessmentPercentage;\n    const currentTaxes = calculateTaxes(currentAssessedValue, millRate);\n\n    // Calculate new taxes\n    const taxedInvestment = (valueAfterInvestment - startingValue) * (propertyType === PropertyTypes.historic ? 0 : 0.05);\n    const newTaxableAmount = startingValue + taxedInvestment;\n    const newTaxableAmountAssessed = newTaxableAmount * assessmentPercentage;\n    const newTaxes = calculateTaxes(newTaxableAmountAssessed, millRate);\n\n    // Calculate incremental tax values\n    const incrementalAppraisedValue = valueAfterInvestment - taxedInvestment;\n    const incrementalAssessedValue = incrementalAppraisedValue * assessmentPercentage;\n    const incrementalTaxSavings = (incrementalAssessedValue / 1000) * millRate;\n\n    // Calculate payments/savings per year\n    const payPerYear = newTaxes;\n    const savePerYear = incrementalTaxSavings;\n\n    // Total savings\n    const savings = savePerYear * incentiveYears;\n    \n    // Several values that might be useful to display\n    return {\n        incentiveYears,\n        currentTaxes,\n        newTaxes,\n        incrementalTaxSavings,\n        payPerYear,\n        savePerYear,\n        savings\n    }\n\n}\n\nconst zoneData = new Map([\n    ['Area 1', {\n        millRateLow: 166.699688,\n        millRateHigh: 184.882947,\n        millRateAvg: 168.0502949,\n        incentiveYears: 10,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.multiFamily]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.historic]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.05,\n                rebate: 1.00\n            }\n        }\n    }],\n    ['Area 2 East', {\n        millRateLow: 151.970885,\n        millRateHigh: 187.634256,\n        millRateAvg: 168.6046749,\n        incentiveYears: 5,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.multiFamily]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.historic]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.10,\n                rebate: 1.00\n            }\n        }\n    }],\n    ['Area 2 East - State Avenue Corridor', {\n        millRateLow: 166.699688,\n        millRateHigh: 172.831745,\n        millRateAvg: 171.7744938,\n        incentiveYears: 5,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.multiFamily]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.historic]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.10,\n                rebate: 1.00\n            }\n        }\n    }],\n    ['Area 2 West', {\n        millRateLow: 166.699688,\n        millRateHigh: 176.91593,\n        millRateAvg: 166.7490233,\n        incentiveYears: 5,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.multiFamily]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.historic]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.10,\n                rebate: 1.00\n            }\n        }\n    }],\n    ['Area 3', {\n        millRateLow: 172.760032,\n        millRateHigh: 180.7673,\n        millRateAvg: 172.8878387,\n        incentiveYears: 5,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: true,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.multiFamily]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.historic]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 1.00\n            }\n        }\n    }],\n    ['Area 4', {\n        millRateLow: 166.699688,\n        millRateHigh: 176.931593,\n        millRateAvg: 174.3241988,\n        incentiveYears: 5,\n        propertyTypes: {\n            [PropertyTypes.singleFamilyDetached]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.duplexSingleFamilyAttached]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.townhomeSingleFamilyAttached]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            },\n            [PropertyTypes.singleDuplex]: {\n                new: false,\n                rehab: true,\n                minInvestment: 0.15,\n                rebate: 0.95\n            }\n        }\n    }],\n    ['Bonner Springs Zone 3', {\n        millRateLow: 166.87731,\n        millRateHigh: 166.87731,\n        millRateAvg: 166.87731\n    }],\n    ['Bonner Springs Zone 4', {\n        millRateLow: 166.87731,\n        millRateHigh: 180.76073,\n        millRateAvg: 166.8845297\n    }],\n    ['Edwardsville', {\n        millRateLow: 166.87731,\n        millRateHigh: 180.76073,\n        millRateAvg: 180.6365491\n    }]\n]);\n","import { Component } from \"react\";\nimport L from \"leaflet\";\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { withLeaflet } from \"react-leaflet\";\nimport PropTypes from 'prop-types';\n\n/* \nCode attribution: solution to integrating search control with react-leaflet sourced from \n'https://stackoverflow.com/questions/54904484/unable-to-add-leaflet-geosearch-to-react-application'. \n*/\n\nclass Search extends Component {\n  componentDidMount() {\n    const map = this.props.leaflet.map;\n    const searchControl = new ELG.Geosearch({zoomToResult: false}).addTo(map);\n    const results = new L.LayerGroup().addTo(map);\n\n    searchControl.on(\"results\", function(data) {\n      results.clearLayers();\n      for (let i = data.results.length - 1; i >= 0; i--) {\n        results.addLayer(L.marker(data.results[i].latlng));\n      }\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\n//Need to review valid proptypes. leaflet == component, map == object?\nSearch.propTypes = {\n    leaflet: PropTypes.any,\n    map: PropTypes.any, \n  }\n\nexport default withLeaflet(Search);","import React from 'react'\nimport { Map as LeafletMap, TileLayer, GeoJSON } from 'react-leaflet';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\n\nclass Map extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      polygons: [],\n      position: [39.1155, -94.7478],\n      zoom: 11,\n      selection: [],\n      highlight: false\n    }\n  }\n\n  handleHighlight() {\n    if (this.state.highlight === true) {\n      this.setState({\n        highlight: false\n      })\n    } else {\n      this.setState({\n        highlight: true\n      })\n    }\n  }\n\n  //sets zone selection in form. also serves as wrapper function for toggling highlight.\n  getAreaFromClick = e => {\n      this.props.setZoneFromMap(e.layer.feature.properties.Name);\n      this.setState({\n        selection: e.layer.feature,\n      })\n      this.handleHighlight()\n  }\n\n\n  //load geoJSON containing zone polygons\n  async componentDidMount() {\n    //API call\n    const response = await fetch(`https://opendata.arcgis.com/datasets/adb3297a0cb14d32b0274aaffa469538_0.geojson`);\n    const json = await response.json();\n    this.setState({\n      polygons: json,\n    });\n    console.log(this.state.polygons)\n  }\n\n  render = () => {\n    return (\n      <LeafletMap\n        style={{ width: '100%' }}\n        center={this.state.position}\n        zoom={this.state.zoom}\n        //disabled click zoom to prevent conflict with zone selection\n        doubleClickZoom={false}>\n        <TileLayer url='http://{s}.tile.osm.org/{z}/{x}/{y}.png' attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' />\n\n        <GeoJSON \n          key={this.state.polygons}\n          data={this.state.polygons}\n          onClick={this.getAreaFromClick}\n          style={{color: \"green\"}}\n          />\n        \n        {/* contains highlighted zone. currently alerts console about duplicate keys. will resolve error. */}\n        {this.state.highlight && \n          <GeoJSON \n            key={this.state.selection}\n            data={this.state.selection}\n            style={{color: \"yellow\"}}/>}\n\n        <Search />\n\n      </LeafletMap>\n    );\n  }\n}\n\nMap.propTypes = {\n  setZoneFromMap: PropTypes.func\n}\n\nexport default Map","import React from 'react'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\nimport Map from '../Map'\nimport PropTypes from 'prop-types';\n\nconst zonePickerStyle = {\n  textAlign: 'center',\n  marginBottom: '1em'\n}\n\n//popup modal containing Leaflet.js map\n\nclass ZonePicker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      modalOpen: false \n    }\n  }\n\n  handleOpen = () => {\n    this.setState({\n      modalOpen: true\n    })\n  }\n  handleClose = () => {\n    this.setState({\n      modalOpen: false\n    })\n  }\n  render() {\n    return(\n      <div style={zonePickerStyle}>\n        <Modal \n        trigger={\n          <Button \n            fluid size='large'\n            onClick={this.handleOpen}\n            color={this.props.zone ? this.props.successColor : undefined}\n          >\n            {this.props.zone ? <><Icon name=\"checkmark\"/> Zone is set: {this.props.zone}</> : this.props.message}\n          </Button>}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}>\n          <Modal.Header>\n            {this.props.message}\n          </Modal.Header>\n          <Modal.Content image>\n            <Map \n            setZoneFromMap={this.props.setZoneFromMap}/>\n          </Modal.Content>\n          <Modal.Actions>\n          {/* {!this.props.zone && <Button\n          fluid\n          size='large'\n          color='blue'>\n            {\"Where is my zone?\"}\n          </Button>} */}\n          {this.props.zone && <Button\n              primary\n              fluid\n              size='large'\n              onClick={this.handleClose}>\n              <Icon name=\"checkmark\"/>Done\n            </Button>}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nZonePicker.propTypes = {\n  zone: PropTypes.string,\n  setZoneFromMap: PropTypes.func,\n  message: PropTypes.any,\n  successColor: PropTypes.string\n}\n\nexport default ZonePicker;\n","import React from 'react';\nimport './NRACalculator.scss';\n//import for Semantic-UI components\nimport { Button, Icon, Form, Grid, Segment, GridColumn, Label, Message } from 'semantic-ui-react'\nimport { getNRAEstimates } from './calculations';\nimport ZonePicker from '../ZonePicker';\nimport PropertyTypes from './PropertyTypes';\n\n//array of property type options for drop-down input\nconst HomeOptions = [\n  {key: 's', text: 'Single-Family Detached', value: PropertyTypes.singleFamilyDetached},\n  {key: 'd', text: 'Duplex Single-Family Attached', value: PropertyTypes.duplexSingleFamilyAttached},\n  {key: 't', text: 'Townhome Single-Family Attached', value: PropertyTypes.townhomeSingleFamilyAttached},\n  {key: 'sd', text: 'Single Duplex', value: PropertyTypes.singleDuplex},\n  {key: 'm', text: 'Multi-Family', value: PropertyTypes.multiFamily},\n  {key: 'h', text: 'Historic', value: PropertyTypes.historic}\n]\n\n//array of improvement type options for drop-down input\nconst ImprovOptions = [\n  {key: 'c', text: 'New Construction', value: 'new'},\n  {key: 'r', text: 'Rehabilitation', value: 'rehab'}\n]\n\nclass NRACalculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: \"\",\n      valueAfterInvestment: \"\",\n      zone: \"\",\n      estimates: {},\n      investmentType: \"\",\n      propertyType: \"\",\n      eligibility: {},\n      errors: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleCurrent = (e, data) => {\n    this.setState({\n      current: cleanNumber(data.value),\n    })\n  }\n\n  handleValueAfterInvestment = (e, data) => {\n    this.setState({\n      valueAfterInvestment: cleanNumber(data.value),\n    })\n  }\n\n  handleInvestmentType = (e, data) => {\n    this.setState({\n      investmentType: data.value,\n    })\n  }\n\n  handlePropertyType = (e, data) => {\n    this.setState({\n      propertyType: data.value,\n    })\n  }\n\n  handleZone = (e, data) => {\n    this.setState({\n      zone: cleanNumber(data.value),\n    })\n  }\n\n  setZoneFromMap = zone => {\n      this.setState({ zone });\n  }\n\n  handleSubmit() {\n    if (this.state.current && this.state.valueAfterInvestment && this.state.zone) {\n      const estimates = getNRAEstimates(\n        this.state.current,\n        this.state.valueAfterInvestment,\n        this.state.investmentType,\n        this.state.propertyType,\n        this.state.zone\n        );\n      this.setState({\n        estimates,\n        eligibility: estimates.eligibility,\n        errors: estimates.eligibility.errors,\n        investmentTypeError: estimates.eligibility.errors.map(error => error.category === 'investmentType')[0],\n        propertyTypeError: estimates.eligibility.errors.map(error => error.category === 'propertyType')[0],\n        valueAfterInvestmentError: estimates.eligibility.errors.map(error => error.category === 'minimumInvestment')[0]\n      });\n    }\n  }\n\n  render = () => {\n    return (\n      <Grid textAlign='left' className=\"NRACalculator\">\n        <GridColumn>\n          <Form size='large'>\n            <Segment stacked>\n\n              {/* Text inputs grouped together */}\n              <Form.Group\n                widths=\"equal\">\n                    {/** Current valuation form input **/}\n                  <Form.Input\n                    fluid\n                    label=\"Current Property Value\"\n                    labelPosition=\"left\"\n                    placeholder='Current Property Value'\n                    onChange={this.handleCurrent}>\n                    <Label>$</Label>\n                    <input />\n                  </Form.Input>\n                  {/** Est. Value After Investment form input **/}\n                  <Form.Input\n                    fluid\n                    error={this.state.valueAfterInvestmentError}\n                    label=\"Est. Value After Investment\"\n                    labelPosition=\"left\"\n                    placeholder='Est. Value After Investment'\n                    onChange={this.handleValueAfterInvestment}>\n                    <Label>$</Label>\n                    <input />\n                  </Form.Input>\n              </Form.Group>\n\n              {/* Dropdown inputs grouped together */}\n              <Form.Group\n                widths='equal'>\n                  {/** Dropdown input for improvement type **/}\n                  <Form.Select\n                    fluid\n                    error={this.state.investmentTypeError}\n                    label='Investment Type'\n                    options={ImprovOptions}\n                    placeholder='Investment Type'\n                    onChange={this.handleInvestmentType}  \n                    />\n                  {/** Dropdown input for home type **/}\n                  <Form.Select\n                    fluid\n                    error={this.state.propertyTypeError}\n                    label='Property Type'\n                    options={HomeOptions}\n                    placeholder='Building Type'\n                    onChange={this.handlePropertyType}  \n                    />\n              </Form.Group>\n\n              {/** Zone picker. Opens map modal **/}\n              <ZonePicker \n                setZoneFromMap={this.setZoneFromMap}\n                message={<>{<Icon name=\"map\"/>} Select Your Zone</>}\n                successColor='green'\n                zone={this.state.zone}/>\n\n              {/** Submit button **/}\n              <Button\n                disabled={\n                  !this.state.current\n                  || !this.state.valueAfterInvestment\n                  || !this.state.zone\n                  || !this.state.investmentType\n                  || !this.state.propertyType\n                }\n                color='blue'\n                fluid size='large'\n                onClick={this.handleSubmit}>\n                <Icon name=\"calculator\"/>\n                Calculate Rebate\n              </Button>\n\n              { /* Calculation results */ }\n              { this.state.estimates.estAverage &&\n                <Segment basic textAlign=\"center\">\n                  <p>These estimates provide a range depending on the mill rate, which vary within each zone.</p>\n\n                  <p><b>You pay</b> ${\n                    formatNumber(this.state.estimates.estLow.payPerYear)\n                    } - ${\n                      formatNumber(this.state.estimates.estHigh.payPerYear)\n                    } in taxes each year</p>\n\n                  <p><b>You save</b> ${\n                    formatNumber(this.state.estimates.estLow.savePerYear)\n                    } - ${\n                      formatNumber(this.state.estimates.estHigh.savePerYear)\n                    } in taxes per year</p>\n\n                  <p><b>Over {this.state.estimates.estAverage.incentiveYears} years, you save</b> ${\n                      formatNumber(this.state.estimates.estLow.savings)\n                    } - ${\n                      formatNumber(this.state.estimates.estHigh.savings)\n                    } in taxes.</p>\n                </Segment>\n              }\n              { this.state.errors.length > 0 &&\n                <Segment basic textAlign=\"center\">\n                  {this.state.errors.map(error => <Message color=\"red\" key={error.id}>{error.message}</Message>)}\n                </Segment>\n              }\n\n            </Segment>\n          </Form>\n        </GridColumn>\n      </Grid>\n    )\n  }\n}\n\nfunction cleanNumber(num) {\n  // Remove $ and , symbols for calculation\n  const cleanNum = num.toString().replace(/,*\\$*/g, '');\n  return parseInt(Math.floor(cleanNum));\n}\n\nfunction formatNumber(num) {\n  // This will limit to 2 decimals and add commas to thousands\n  return num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport default NRACalculator;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\nimport './Tabs.scss';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className=\"tabs\">\n        <ol className=\"tab-list\">\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className=\"tab-content\">\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react'\n\nexport class Resources extends Component {\n    render() {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <a \n                    href=\"https://www.wycokck.org/WycoKCK/media/Economic-Development/Documents/CR-NRA-Brochure.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={linkStyle}\n                ><h3>Brochure</h3></a>\n                <p>Details about the Neighborhood Revitalization Act including contact information, what types of properties qualify, information about zones, etc.</p>\n                <a\n                    href=\"https://www.wycokck.org/WycoKCK/media/Economic-Development/Documents/2018-2020-NRA-Application.pdf\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={linkStyle}\n                ><h3>Application</h3></a>\n                <p>Begin the application process by filling out this form. The application includes details about how to submit for processing.</p>\n                \n                <h3 label=\"Contact\">Contact information</h3>\n                <div><p> Stephanie M. Moore</p></div>\n                <div><p>smmoore@wycokck.org</p></div>\n                <div><p> (913) 573-5730</p></div>\n            </div>\n        )\n    }\n}\n\nconst linkStyle = {\n    fontWeight: 'bold',\n    marginBottom: '1em',\n    textAlign: 'center',\n    display: 'block',\n};\n\nexport default Resources\n","import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport './App.scss';\nimport AppFooter from './components/AppFooter';\nimport NRACalculator from './components/NRACalculator';\nimport Tabs from './components/Tabs/Tabs';\nimport Resources from './components/Resources';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader>Neighborhood Revitalization Act</AppHeader>\n      <Tabs>\n        <div label=\"Calculator\">\n        <p>\n          This is an effort by the Unified Government of Wyandotte County and \n          Kansas City, Kansas to promote revitalization of designated areas through\n          tax incentives on new construction and improvements. Start below to estimate your potential tax incentive.\n        </p>\n        <NRACalculator></NRACalculator>\n        </div>\n        <div label=\"Resources\">\n          <Resources />\n        </div>\n      </Tabs>\n      <AppFooter>\n        Created in partnership with <a href=\"https://codeforkc.org\">Code for KC</a><br />\n        Contribute code on <a href=\"https://github.com/codeforkansascity/nra_calc\">Github</a>\n      </AppFooter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}